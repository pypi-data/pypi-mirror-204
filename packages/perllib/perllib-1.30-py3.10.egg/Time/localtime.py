#!/usr/bin/env python3
# Generated by "pythonizer -aM ../Time/localtime.pm" v1.026 run by SNOOPYJC on Sat Feb 11 12:45:53 2023
__author__ = """Joe Cool"""
__email__ = "snoopyjc@gmail.com"
__version__ = "1.026"
import builtins, perllib
import time as tm_py
import Time.tm as _Time_tm

perllib.init_package("Time.localtime")


def ctime(*_args):
    _args = list(_args)
    return tm_py.ctime(
        perllib.int_(_args.pop(0) if _args else None) if len(_args) else perllib.time()
    )


Time.localtime.ctime = ctime


def populate(*_args):
    if not _args:
        return

    tmob = Time.tm.new()
    [
        Time.localtime.tm_sec_v,
        Time.localtime.tm_min_v,
        Time.localtime.tm_hour_v,
        Time.localtime.tm_mday_v,
        Time.localtime.tm_mon_v,
        Time.localtime.tm_year_v,
        Time.localtime.tm_wday_v,
        Time.localtime.tm_yday_v,
        Time.localtime.tm_isdst_v,
    ] = perllib.list_of_n(_args, 9)
    tmob[:] = (
        Time.localtime.tm_sec_v,
        Time.localtime.tm_min_v,
        Time.localtime.tm_hour_v,
        Time.localtime.tm_mday_v,
        Time.localtime.tm_mon_v,
        Time.localtime.tm_year_v,
        Time.localtime.tm_wday_v,
        Time.localtime.tm_yday_v,
        Time.localtime.tm_isdst_v,
    )
    return tmob


Time.localtime.populate = populate


def localtime(*_args):
    _args = list(_args)
    return populate(
        *perllib.localtime(
            perllib.int_(_args.pop(0) if _args else None) if len(_args) else perllib.time()
        )
    )


Time.localtime.localtime = localtime


def __BEGIN__14():
    pass  # SKIPPED:     use Exporter   ();
    Time.localtime.ISA_a = "Exporter Time::tm".split()
    Time.localtime.EXPORT_a = "localtime ctime".split()
    Time.localtime.EXPORT_OK_a = (
        "$tm_sec $tm_min $tm_hour $tm_mday $tm_mon $tm_year $tm_wday $tm_yday $tm_isdst".split()
    )
    Time.localtime.EXPORT_TAGS_h = perllib.Hash(
        {"FIELDS": [*Time.localtime.EXPORT_OK_a, *Time.localtime.EXPORT_a]}
    )
    Time.localtime.VERSION_v = 1.03


Time.localtime.__BEGIN__14 = __BEGIN__14

Time.localtime.EXPORT_OK_a = perllib.init_global("Time.localtime", "EXPORT_OK_a", perllib.Array())
Time.localtime.EXPORT_TAGS_h = perllib.init_global(
    "Time.localtime", "EXPORT_TAGS_h", perllib.Hash()
)
Time.localtime.EXPORT_a = perllib.init_global("Time.localtime", "EXPORT_a", perllib.Array())
Time.localtime.ISA_a = perllib.init_global("Time.localtime", "ISA_a", perllib.Array())
Time.localtime.VERSION_v = perllib.init_global("Time.localtime", "VERSION_v", "")
Time.localtime.tm_hour_v = perllib.init_global("Time.localtime", "tm_hour_v", "")
Time.localtime.tm_isdst_v = perllib.init_global("Time.localtime", "tm_isdst_v", "")
Time.localtime.tm_mday_v = perllib.init_global("Time.localtime", "tm_mday_v", "")
Time.localtime.tm_min_v = perllib.init_global("Time.localtime", "tm_min_v", "")
Time.localtime.tm_mon_v = perllib.init_global("Time.localtime", "tm_mon_v", "")
Time.localtime.tm_sec_v = perllib.init_global("Time.localtime", "tm_sec_v", "")
Time.localtime.tm_wday_v = perllib.init_global("Time.localtime", "tm_wday_v", "")
Time.localtime.tm_yday_v = perllib.init_global("Time.localtime", "tm_yday_v", "")
Time.localtime.tm_year_v = perllib.init_global("Time.localtime", "tm_year_v", "")

__BEGIN__14()
builtins.__PACKAGE__ = "Time.localtime"
# SKIPPED: use strict;
# SKIPPED: use 5.006_001;
