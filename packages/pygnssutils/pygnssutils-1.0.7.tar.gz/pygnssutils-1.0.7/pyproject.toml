[build-system]
requires = ["setuptools>=66.0.0", "wheel"]
build-backend = "setuptools.build_meta:__legacy__"

[project]
name = "pygnssutils"
authors = [
    {name = "semuadmin", email = "semuadmin@semuconsulting.com"},
]
maintainers = [
  {name = "semuadmin", email = "semuadmin@semuconsulting.com"}
]
description = "GNSS Command Line Utilities"
version = "1.0.7"
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Environment :: MacOS X",
    "Environment :: Win32 (MS Windows)",
    "Environment :: X11 Applications",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: BSD License",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: GIS",
    ]

dependencies = [
    "paho-mqtt>=1.6.1",
    "pyserial>=3.5",
    "pyspartn>=0.1.6",
    "pyubx2>=1.2.24",
]

[project.scripts]
gnssdump = "pygnssutils.gnssdump:main"
gnssserver = "pygnssutils.gnssserver:main"
gnssntripclient = "pygnssutils.gnssntripclient:main"
gnssmqttclient = "pygnssutils.gnssmqttclient:main"
ubxsetrate = "pygnssutils.ubxsetrate:main"
ubxsave = "pygnssutils.ubxsave:main"
ubxload = "pygnssutils.ubxload:main"

[project.urls]
homepage = "https://github.com/semuconsulting/pygnssutils"
documentation = "https://www.semuconsulting.com/pygnssutils/"
repository = "https://github.com/semuconsulting/pygnssutils"
changelog = "https://github.com/semuconsulting/pygnssutils/blob/master/RELEASE_NOTES.md"

[project.optional-dependencies]
deploy = [
    "build >= 0.10",
    "pip >= 23.0",
    "setuptools >= 66.0",
    "wheel >= 0.40"
] 
test = [
    "bandit >= 1.7",
    "black >= 23.1",
    "pylint >= 2.17",
    "pytest >= 7.2",
    "pytest-cov >= 4.0",
    "Sphinx >= 5.3",
    "sphinx-rtd-theme >= 1.2.0"
]

[tool.bandit]
exclude_dirs = ["docs", "examples", "tests"]
skips = ["B104","B307"] # bind 0.0.0.0; use of eval

[tool.pylint]
jobs = 0
reports = "y"
py-version = "3.7"
#exit-zero = "y"
fail-under = "9.8"
fail-on = "E,F"
clear-cache-post-run = "y"
disable = """
    raw-checker-failed,
    bad-inline-option,
    locally-disabled,
    file-ignored,
    suppressed-message,
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,
"""

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov --cov-report term-missing --cov-fail-under 35"
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]