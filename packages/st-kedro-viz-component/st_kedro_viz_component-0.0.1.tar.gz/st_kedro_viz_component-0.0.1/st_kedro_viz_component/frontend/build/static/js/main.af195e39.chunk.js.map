{"version":3,"sources":["KedroVizComponent.tsx","index.tsx"],"names":["KedroVizComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","render","pipeline","props","React","createElement","Fragment","Box","sx","theme","backgroundColor","colorScheme","colors","dark","gray","textAlign","height","KedroViz","data","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gSAcMA,EAAiB,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAyBpB,OAzBoBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAEdM,OAAS,WAId,IAAMC,EAAWZ,EAAKa,MAAMR,KAAe,SAC3C,OACES,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACE,IAAG,CACJC,GAAI,SAACC,GAAK,MAAM,CACdC,gBAAuC,SAAtBD,EAAME,YAAyBF,EAAMG,OAAOC,KAAK,GAAKJ,EAAMG,OAAOE,KAAK,GACzFC,UAAW,SACXC,OAAQ,QAER,UAAW,CACTN,gBACwB,SAAtBD,EAAME,YAAyBF,EAAMG,OAAOC,KAAK,GAAKJ,EAAMG,OAAOE,KAAK,OAI9EV,IAAAC,cAACY,IAAQ,CAACC,KAAOhB,OAIpBZ,EAAA,OAAA6B,YAAAlC,GAzBoB,CAASmC,KA4BjBC,cAAwBpC,GCtCvCqC,IAASrB,OACPG,IAAAC,cAACD,IAAMmB,WAAU,KACfnB,IAAAC,cAACpB,EAAiB,OAEpBuC,SAASC,eAAe,W","file":"static/js/main.af195e39.chunk.js","sourcesContent":["import {\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport KedroViz from \"@quantumblack/kedro-viz\"\r\nimport { Box } from \"@mantine/core\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\n\r\n/**\r\n * This is a React-based component template. The `render()` function is called\r\n * automatically when your component should be re-rensdered.\r\n */\r\n\r\nclass KedroVizComponent extends StreamlitComponentBase<any> {\r\n  \r\n  public render = (): ReactNode => {\r\n    // Arguments that are passed to the plugin in Python are accessible\r\n    // via `this.props.args`. Here, we access the \"name\" arg.\r\n    //const name = this.props.args[\"name\"]\r\n    const pipeline = this.props.args[\"pipeline\"]\r\n    return (\r\n      <>\r\n      <Box\r\n      sx={(theme) => ({\r\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\r\n        textAlign: 'center',\r\n        height: '800px',\r\n\r\n        '&:hover': {\r\n          backgroundColor:\r\n            theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[1],\r\n        },\r\n      })}\r\n    >\r\n      <KedroViz data={ pipeline} />\r\n      </Box> \r\n      </>\r\n    )\r\n  }\r\n} \r\n\r\nexport default withStreamlitConnection(KedroVizComponent)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport KedroVizComponent from \"./KedroVizComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <KedroVizComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}