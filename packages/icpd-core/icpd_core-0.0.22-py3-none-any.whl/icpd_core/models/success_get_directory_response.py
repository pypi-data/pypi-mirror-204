# coding: utf-8

"""
    IBM CLOUD PAK FOR DATA

    This is the Public API for IBM Cloud Pak for Data  # noqa: E501

    OpenAPI spec version: Beta
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SuccessGetDirectoryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'message_code_': 'str',
        'message': 'str',
        'response_object': 'object',
        'status': 'str'
    }

    attribute_map = {
        'message_code_': '_messageCode_',
        'message': 'message',
        'response_object': 'responseObject',
        'status': 'status'
    }

    def __init__(self, message_code_=None, message=None, response_object=None, status=None):  # noqa: E501
        """SuccessGetDirectoryResponse - a model defined in Swagger"""  # noqa: E501

        self._message_code_ = None
        self._message = None
        self._response_object = None
        self._status = None
        self.discriminator = None

        if message_code_ is not None:
            self.message_code_ = message_code_
        if message is not None:
            self.message = message
        if response_object is not None:
            self.response_object = response_object
        if status is not None:
            self.status = status

    @property
    def message_code_(self):
        """Gets the message_code_ of this SuccessGetDirectoryResponse.  # noqa: E501

        message code  # noqa: E501

        :return: The message_code_ of this SuccessGetDirectoryResponse.  # noqa: E501
        :rtype: str
        """
        return self._message_code_

    @message_code_.setter
    def message_code_(self, message_code_):
        """Sets the message_code_ of this SuccessGetDirectoryResponse.

        message code  # noqa: E501

        :param message_code_: The message_code_ of this SuccessGetDirectoryResponse.  # noqa: E501
        :type: str
        """

        self._message_code_ = message_code_

    @property
    def message(self):
        """Gets the message of this SuccessGetDirectoryResponse.  # noqa: E501

        message  # noqa: E501

        :return: The message of this SuccessGetDirectoryResponse.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SuccessGetDirectoryResponse.

        message  # noqa: E501

        :param message: The message of this SuccessGetDirectoryResponse.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def response_object(self):
        """Gets the response_object of this SuccessGetDirectoryResponse.  # noqa: E501

        response object  # noqa: E501

        :return: The response_object of this SuccessGetDirectoryResponse.  # noqa: E501
        :rtype: object
        """
        return self._response_object

    @response_object.setter
    def response_object(self, response_object):
        """Sets the response_object of this SuccessGetDirectoryResponse.

        response object  # noqa: E501

        :param response_object: The response_object of this SuccessGetDirectoryResponse.  # noqa: E501
        :type: object
        """

        self._response_object = response_object

    @property
    def status(self):
        """Gets the status of this SuccessGetDirectoryResponse.  # noqa: E501

        status  # noqa: E501

        :return: The status of this SuccessGetDirectoryResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SuccessGetDirectoryResponse.

        status  # noqa: E501

        :param status: The status of this SuccessGetDirectoryResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SuccessGetDirectoryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SuccessGetDirectoryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
