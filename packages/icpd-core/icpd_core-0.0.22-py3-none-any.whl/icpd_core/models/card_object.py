# coding: utf-8

"""
    IBM CLOUD PAK FOR DATA

    This is the Public API for IBM Cloud Pak for Data  # noqa: E501

    OpenAPI spec version: Beta
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CardObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bar_data': 'BarDataObj',
        'big_number_data': 'BigNumberDataObj',
        'content_block_data': 'ContentBlockDataObj',
        'donut_data': 'DonutDataObj',
        'list_data': 'ListDataObj',
        'number_list_data': 'NumberListDataObj',
        'text_list_data': 'TextListDataObj'
    }

    attribute_map = {
        'bar_data': 'bar_data',
        'big_number_data': 'big_number_data',
        'content_block_data': 'content_block_data',
        'donut_data': 'donut_data',
        'list_data': 'list_data',
        'number_list_data': 'number_list_data',
        'text_list_data': 'text_list_data'
    }

    def __init__(self, bar_data=None, big_number_data=None, content_block_data=None, donut_data=None, list_data=None, number_list_data=None, text_list_data=None):  # noqa: E501
        """CardObject - a model defined in Swagger"""  # noqa: E501

        self._bar_data = None
        self._big_number_data = None
        self._content_block_data = None
        self._donut_data = None
        self._list_data = None
        self._number_list_data = None
        self._text_list_data = None
        self.discriminator = None

        if bar_data is not None:
            self.bar_data = bar_data
        if big_number_data is not None:
            self.big_number_data = big_number_data
        if content_block_data is not None:
            self.content_block_data = content_block_data
        if donut_data is not None:
            self.donut_data = donut_data
        if list_data is not None:
            self.list_data = list_data
        if number_list_data is not None:
            self.number_list_data = number_list_data
        if text_list_data is not None:
            self.text_list_data = text_list_data

    @property
    def bar_data(self):
        """Gets the bar_data of this CardObject.  # noqa: E501


        :return: The bar_data of this CardObject.  # noqa: E501
        :rtype: BarDataObj
        """
        return self._bar_data

    @bar_data.setter
    def bar_data(self, bar_data):
        """Sets the bar_data of this CardObject.


        :param bar_data: The bar_data of this CardObject.  # noqa: E501
        :type: BarDataObj
        """

        self._bar_data = bar_data

    @property
    def big_number_data(self):
        """Gets the big_number_data of this CardObject.  # noqa: E501


        :return: The big_number_data of this CardObject.  # noqa: E501
        :rtype: BigNumberDataObj
        """
        return self._big_number_data

    @big_number_data.setter
    def big_number_data(self, big_number_data):
        """Sets the big_number_data of this CardObject.


        :param big_number_data: The big_number_data of this CardObject.  # noqa: E501
        :type: BigNumberDataObj
        """

        self._big_number_data = big_number_data

    @property
    def content_block_data(self):
        """Gets the content_block_data of this CardObject.  # noqa: E501


        :return: The content_block_data of this CardObject.  # noqa: E501
        :rtype: ContentBlockDataObj
        """
        return self._content_block_data

    @content_block_data.setter
    def content_block_data(self, content_block_data):
        """Sets the content_block_data of this CardObject.


        :param content_block_data: The content_block_data of this CardObject.  # noqa: E501
        :type: ContentBlockDataObj
        """

        self._content_block_data = content_block_data

    @property
    def donut_data(self):
        """Gets the donut_data of this CardObject.  # noqa: E501


        :return: The donut_data of this CardObject.  # noqa: E501
        :rtype: DonutDataObj
        """
        return self._donut_data

    @donut_data.setter
    def donut_data(self, donut_data):
        """Sets the donut_data of this CardObject.


        :param donut_data: The donut_data of this CardObject.  # noqa: E501
        :type: DonutDataObj
        """

        self._donut_data = donut_data

    @property
    def list_data(self):
        """Gets the list_data of this CardObject.  # noqa: E501


        :return: The list_data of this CardObject.  # noqa: E501
        :rtype: ListDataObj
        """
        return self._list_data

    @list_data.setter
    def list_data(self, list_data):
        """Sets the list_data of this CardObject.


        :param list_data: The list_data of this CardObject.  # noqa: E501
        :type: ListDataObj
        """

        self._list_data = list_data

    @property
    def number_list_data(self):
        """Gets the number_list_data of this CardObject.  # noqa: E501


        :return: The number_list_data of this CardObject.  # noqa: E501
        :rtype: NumberListDataObj
        """
        return self._number_list_data

    @number_list_data.setter
    def number_list_data(self, number_list_data):
        """Sets the number_list_data of this CardObject.


        :param number_list_data: The number_list_data of this CardObject.  # noqa: E501
        :type: NumberListDataObj
        """

        self._number_list_data = number_list_data

    @property
    def text_list_data(self):
        """Gets the text_list_data of this CardObject.  # noqa: E501


        :return: The text_list_data of this CardObject.  # noqa: E501
        :rtype: TextListDataObj
        """
        return self._text_list_data

    @text_list_data.setter
    def text_list_data(self, text_list_data):
        """Sets the text_list_data of this CardObject.


        :param text_list_data: The text_list_data of this CardObject.  # noqa: E501
        :type: TextListDataObj
        """

        self._text_list_data = text_list_data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CardObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CardObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
