# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictStr

class Acquirer(BaseModel):
    """
    Acquirer
    """
    institution_country: Optional[StrictStr] = None
    network_international_id: Optional[StrictStr] = None
    institution_id_code: Optional[StrictStr] = None
    retrieval_reference_number: Optional[StrictStr] = None
    system_trace_audit_number: Optional[StrictStr] = None
    __properties = ["institution_country", "network_international_id", "institution_id_code", "retrieval_reference_number", "system_trace_audit_number"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Acquirer:
        """Create an instance of Acquirer from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Acquirer:
        """Create an instance of Acquirer from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return Acquirer.parse_obj(obj)

        _obj = Acquirer.parse_obj({
            "institution_country": obj.get("institution_country"),
            "network_international_id": obj.get("network_international_id"),
            "institution_id_code": obj.get("institution_id_code"),
            "retrieval_reference_number": obj.get("retrieval_reference_number"),
            "system_trace_audit_number": obj.get("system_trace_audit_number")
        })
        return _obj

