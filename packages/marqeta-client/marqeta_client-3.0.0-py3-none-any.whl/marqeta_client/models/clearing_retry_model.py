# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictInt, StrictStr

class ClearingRetryModel(BaseModel):
    """
    ClearingRetryModel
    """
    original_failed_transaction_token: StrictStr = ...
    new_network_reference: Optional[StrictStr] = None
    new_approval_code: Optional[StrictStr] = None
    new_stan: Optional[StrictStr] = None
    find_original_window_days: Optional[StrictInt] = None
    new_processing_code: Optional[StrictStr] = None
    __properties = ["original_failed_transaction_token", "new_network_reference", "new_approval_code", "new_stan", "find_original_window_days", "new_processing_code"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ClearingRetryModel:
        """Create an instance of ClearingRetryModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                            "new_approval_code",
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ClearingRetryModel:
        """Create an instance of ClearingRetryModel from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return ClearingRetryModel.parse_obj(obj)

        _obj = ClearingRetryModel.parse_obj({
            "original_failed_transaction_token": obj.get("original_failed_transaction_token"),
            "new_network_reference": obj.get("new_network_reference"),
            "new_approval_code": obj.get("new_approval_code"),
            "new_stan": obj.get("new_stan"),
            "find_original_window_days": obj.get("find_original_window_days"),
            "new_processing_code": obj.get("new_processing_code")
        })
        return _obj

