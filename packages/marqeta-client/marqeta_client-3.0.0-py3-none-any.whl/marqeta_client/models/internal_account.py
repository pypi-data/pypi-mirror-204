# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictBool, StrictInt, StrictStr

class InternalAccount(BaseModel):
    """
    InternalAccount
    """
    id: StrictInt = ...
    code: StrictStr = ...
    subclass: StrictStr = ...
    final_account: Optional[StrictBool] = None
    cardholder_account: Optional[StrictBool] = None
    __properties = ["id", "code", "subclass", "final_account", "cardholder_account"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> InternalAccount:
        """Create an instance of InternalAccount from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> InternalAccount:
        """Create an instance of InternalAccount from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return InternalAccount.parse_obj(obj)

        _obj = InternalAccount.parse_obj({
            "id": obj.get("id"),
            "code": obj.get("code"),
            "subclass": obj.get("subclass"),
            "final_account": obj.get("final_account"),
            "cardholder_account": obj.get("cardholder_account")
        })
        return _obj

