# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr

class OtherPoi(BaseModel):
    """
    OtherPoi
    """
    allow: Optional[StrictBool] = True
    card_presence_required: Optional[StrictBool] = Field(False, description="Default = false")
    cardholder_presence_required: Optional[StrictBool] = Field(False, description="Default = false")
    track1_discretionary_data: Optional[StrictStr] = None
    track2_discretionary_data: Optional[StrictStr] = None
    use_static_pin: Optional[StrictBool] = False
    __properties = ["allow", "card_presence_required", "cardholder_presence_required", "track1_discretionary_data", "track2_discretionary_data", "use_static_pin"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> OtherPoi:
        """Create an instance of OtherPoi from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> OtherPoi:
        """Create an instance of OtherPoi from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return OtherPoi.parse_obj(obj)

        _obj = OtherPoi.parse_obj({
            "allow": obj.get("allow") if obj.get("allow") is not None else True,
            "card_presence_required": obj.get("card_presence_required") if obj.get("card_presence_required") is not None else False,
            "cardholder_presence_required": obj.get("cardholder_presence_required") if obj.get("cardholder_presence_required") is not None else False,
            "track1_discretionary_data": obj.get("track1_discretionary_data"),
            "track2_discretionary_data": obj.get("track2_discretionary_data"),
            "use_static_pin": obj.get("use_static_pin") if obj.get("use_static_pin") is not None else False
        })
        return _obj

