# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictStr

class AndroidPushTokenRequestAddress(BaseModel):
    """
    AndroidPushTokenRequestAddress
    """
    name: Optional[StrictStr] = None
    address1: Optional[StrictStr] = None
    address2: Optional[StrictStr] = None
    city: Optional[StrictStr] = None
    state: Optional[StrictStr] = None
    zip: Optional[StrictStr] = None
    postal_code: Optional[StrictStr] = None
    country: Optional[StrictStr] = None
    phone: Optional[StrictStr] = None
    __properties = ["name", "address1", "address2", "city", "state", "zip", "postal_code", "country", "phone"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> AndroidPushTokenRequestAddress:
        """Create an instance of AndroidPushTokenRequestAddress from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AndroidPushTokenRequestAddress:
        """Create an instance of AndroidPushTokenRequestAddress from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return AndroidPushTokenRequestAddress.parse_obj(obj)

        _obj = AndroidPushTokenRequestAddress.parse_obj({
            "name": obj.get("name"),
            "address1": obj.get("address1"),
            "address2": obj.get("address2"),
            "city": obj.get("city"),
            "state": obj.get("state"),
            "zip": obj.get("zip"),
            "postal_code": obj.get("postal_code"),
            "country": obj.get("country"),
            "phone": obj.get("phone")
        })
        return _obj

