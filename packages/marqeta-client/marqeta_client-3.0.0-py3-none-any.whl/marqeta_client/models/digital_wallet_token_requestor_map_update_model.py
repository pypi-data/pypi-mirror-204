# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, StrictStr

class DigitalWalletTokenRequestorMapUpdateModel(BaseModel):
    """
    DigitalWalletTokenRequestorMapUpdateModel
    """
    network: StrictStr = ...
    digital_wallet_token_requestor_id: StrictStr = ...
    digital_wallet_token_requestor_name: StrictStr = ...
    __properties = ["network", "digital_wallet_token_requestor_id", "digital_wallet_token_requestor_name"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> DigitalWalletTokenRequestorMapUpdateModel:
        """Create an instance of DigitalWalletTokenRequestorMapUpdateModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> DigitalWalletTokenRequestorMapUpdateModel:
        """Create an instance of DigitalWalletTokenRequestorMapUpdateModel from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return DigitalWalletTokenRequestorMapUpdateModel.parse_obj(obj)

        _obj = DigitalWalletTokenRequestorMapUpdateModel.parse_obj({
            "network": obj.get("network"),
            "digital_wallet_token_requestor_id": obj.get("digital_wallet_token_requestor_id"),
            "digital_wallet_token_requestor_name": obj.get("digital_wallet_token_requestor_name")
        })
        return _obj

