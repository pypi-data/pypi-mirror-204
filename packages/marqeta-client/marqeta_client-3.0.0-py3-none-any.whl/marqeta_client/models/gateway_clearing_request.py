# coding: utf-8

"""
    Marqeta Core API

    Simplified management of your payment programs  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: dev@swadesh.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional, Union
from pydantic import BaseModel, Field, confloat, conint, constr

class GatewayClearingRequest(BaseModel):
    """
    GatewayClearingRequest
    """
    original_transaction_token: constr(strict=True, max_length=20, min_length=1) = ...
    amount: Optional[Union[confloat(le=9999.99, ge=0.01, strict=True), conint(le=9999, ge=1, strict=True)]] = Field(None, description="Default is same amount as original GPA pending credit")
    __properties = ["original_transaction_token", "amount"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GatewayClearingRequest:
        """Create an instance of GatewayClearingRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GatewayClearingRequest:
        """Create an instance of GatewayClearingRequest from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return GatewayClearingRequest.parse_obj(obj)

        _obj = GatewayClearingRequest.parse_obj({
            "original_transaction_token": obj.get("original_transaction_token"),
            "amount": obj.get("amount")
        })
        return _obj

