# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kaskada/kaskada/v1alpha/compute_service.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from kaskada.kaskada.v1alpha import common_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_common__pb2
from kaskada.kaskada.v1alpha import destinations_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_destinations__pb2
from kaskada.kaskada.v1alpha import fenl_diagnostics_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_fenl__diagnostics__pb2
from kaskada.kaskada.v1alpha import plan_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_plan__pb2
from kaskada.kaskada.v1alpha import schema_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_schema__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-kaskada/kaskada/v1alpha/compute_service.proto\x12\x17kaskada.kaskada.v1alpha\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a$kaskada/kaskada/v1alpha/common.proto\x1a*kaskada/kaskada/v1alpha/destinations.proto\x1a.kaskada/kaskada/v1alpha/fenl_diagnostics.proto\x1a\"kaskada/kaskada/v1alpha/plan.proto\x1a$kaskada/kaskada/v1alpha/schema.proto\"`\n\nFeatureSet\x12<\n\x08\x66ormulas\x18\x01 \x03(\x0b\x32 .kaskada.kaskada.v1alpha.FormulaR\x08\x66ormulas\x12\x14\n\x05query\x18\x02 \x01(\tR\x05query\"`\n\x07\x46ormula\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n\x07\x66ormula\x18\x02 \x01(\tR\x07\x66ormula\x12\'\n\x0fsource_location\x18\x03 \x01(\tR\x0esourceLocation\"\xf9\x02\n\x0c\x43omputeTable\x12<\n\x06\x63onfig\x18\x01 \x01(\x0b\x32$.kaskada.kaskada.v1alpha.TableConfigR\x06\x63onfig\x12\x42\n\x08metadata\x18\x02 \x01(\x0b\x32&.kaskada.kaskada.v1alpha.TableMetadataR\x08metadata\x12J\n\tfile_sets\x18\x03 \x03(\x0b\x32-.kaskada.kaskada.v1alpha.ComputeTable.FileSetR\x08\x66ileSets\x1a\x9a\x01\n\x07\x46ileSet\x12\x41\n\nslice_plan\x18\x01 \x01(\x0b\x32\".kaskada.kaskada.v1alpha.SlicePlanR\tslicePlan\x12L\n\x0eprepared_files\x18\x02 \x03(\x0b\x32%.kaskada.kaskada.v1alpha.PreparedFileR\rpreparedFiles\"\x1e\n\x08PlanHash\x12\x12\n\x04hash\x18\x01 \x01(\x0cR\x04hash\"\"\n GetCurrentSnapshotVersionRequest\"N\n!GetCurrentSnapshotVersionResponse\x12)\n\x10snapshot_version\x18\x01 \x01(\x05R\x0fsnapshotVersion\"\xb0\x04\n\x0e\x43ompileRequest\x12=\n\x06tables\x18\x01 \x03(\x0b\x32%.kaskada.kaskada.v1alpha.ComputeTableR\x06tables\x12\x44\n\x0b\x66\x65\x61ture_set\x18\x02 \x01(\x0b\x32#.kaskada.kaskada.v1alpha.FeatureSetR\nfeatureSet\x12J\n\rslice_request\x18\x03 \x01(\x0b\x32%.kaskada.kaskada.v1alpha.SliceRequestR\x0csliceRequest\x12_\n\x0f\x65xpression_kind\x18\x04 \x01(\x0e\x32\x36.kaskada.kaskada.v1alpha.CompileRequest.ExpressionKindR\x0e\x65xpressionKind\x12\"\n\x0c\x65xperimental\x18\x05 \x01(\x08R\x0c\x65xperimental\x12Z\n\x13per_entity_behavior\x18\x06 \x01(\x0e\x32*.kaskada.kaskada.v1alpha.PerEntityBehaviorR\x11perEntityBehavior\"l\n\x0e\x45xpressionKind\x12\x1f\n\x1b\x45XPRESSION_KIND_UNSPECIFIED\x10\x00\x12\x1c\n\x18\x45XPRESSION_KIND_COMPLETE\x10\x01\x12\x1b\n\x17\x45XPRESSION_KIND_FORMULA\x10\x02\"\xe0\x03\n\x0f\x43ompileResponse\x12#\n\rmissing_names\x18\x01 \x03(\tR\x0cmissingNames\x12S\n\x10\x66\x65nl_diagnostics\x18\x02 \x01(\x0b\x32(.kaskada.kaskada.v1alpha.FenlDiagnosticsR\x0f\x66\x65nlDiagnostics\x12\x38\n\x04plan\x18\x03 \x01(\x0b\x32$.kaskada.kaskada.v1alpha.ComputePlanR\x04plan\x12\x42\n\x0bresult_type\x18\x04 \x01(\x0b\x32!.kaskada.kaskada.v1alpha.DataTypeR\nresultType\x12\x1d\n\nfree_names\x18\x05 \x03(\tR\tfreeNames\x12\x45\n\x0ctable_slices\x18\x06 \x03(\x0b\x32\".kaskada.kaskada.v1alpha.SlicePlanR\x0btableSlices\x12/\n\x13incremental_enabled\x18\x07 \x01(\x08R\x12incrementalEnabled\x12>\n\tplan_hash\x18\x08 \x01(\x0b\x32!.kaskada.kaskada.v1alpha.PlanHashR\x08planHash\"\xc3\x05\n\x0e\x45xecuteRequest\x12\x38\n\x04plan\x18\x01 \x01(\x0b\x32$.kaskada.kaskada.v1alpha.ComputePlanR\x04plan\x12=\n\x06tables\x18\x02 \x03(\x0b\x32%.kaskada.kaskada.v1alpha.ComputeTableR\x06tables\x12\x46\n\x0b\x64\x65stination\x18\x03 \x01(\x0b\x32$.kaskada.kaskada.v1alpha.DestinationR\x0b\x64\x65stination\x12\x46\n\x06limits\x18\x05 \x01(\x0b\x32..kaskada.kaskada.v1alpha.ExecuteRequest.LimitsR\x06limits\x12u\n\x17\x63ompute_snapshot_config\x18\x06 \x01(\x0b\x32=.kaskada.kaskada.v1alpha.ExecuteRequest.ComputeSnapshotConfigR\x15\x63omputeSnapshotConfig\x12?\n\rchanged_since\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0c\x63hangedSince\x12\x46\n\x11\x66inal_result_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0f\x66inalResultTime\x1a+\n\x06Limits\x12!\n\x0cpreview_rows\x18\x01 \x01(\x03R\x0bpreviewRows\x1a{\n\x15\x43omputeSnapshotConfig\x12#\n\routput_prefix\x18\x01 \x01(\tR\x0coutputPrefix\x12=\n\x0bresume_from\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValueR\nresumeFrom\"\xd2\x08\n\x0f\x45xecuteResponse\x12=\n\x05state\x18\x01 \x01(\x0e\x32\'.kaskada.kaskada.v1alpha.LongQueryStateR\x05state\x12\"\n\ris_query_done\x18\x02 \x01(\x08R\x0bisQueryDone\x12X\n\x08progress\x18\x03 \x01(\x0b\x32<.kaskada.kaskada.v1alpha.ExecuteResponse.ProgressInformationR\x08progress\x12J\n\x12\x66light_record_path\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValueR\x10\x66lightRecordPath\x12\x42\n\x0eplan_yaml_path\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValueR\x0cplanYamlPath\x12\x65\n\x11\x63ompute_snapshots\x18\x06 \x03(\x0b\x32\x38.kaskada.kaskada.v1alpha.ExecuteResponse.ComputeSnapshotR\x10\x63omputeSnapshots\x12\x46\n\x0b\x64\x65stination\x18\x07 \x01(\x0b\x32$.kaskada.kaskada.v1alpha.DestinationR\x0b\x64\x65stination\x1a\xed\x02\n\x13ProgressInformation\x12(\n\x10total_input_rows\x18\x01 \x01(\x03R\x0etotalInputRows\x12\x30\n\x14processed_input_rows\x18\x02 \x01(\x03R\x12processedInputRows\x12#\n\rbuffered_rows\x18\x03 \x01(\x03R\x0c\x62ufferedRows\x12\x36\n\x17processed_buffered_rows\x18\x08 \x01(\x03R\x15processedBufferedRows\x12$\n\x0emin_event_time\x18\x04 \x01(\x03R\x0cminEventTime\x12$\n\x0emax_event_time\x18\x05 \x01(\x03R\x0cmaxEventTime\x12\x1f\n\x0boutput_time\x18\x06 \x01(\x03R\noutputTime\x12\x30\n\x14produced_output_rows\x18\x07 \x01(\x03R\x12producedOutputRows\x1a\xd2\x01\n\x0f\x43omputeSnapshot\x12\x12\n\x04path\x18\x01 \x01(\tR\x04path\x12@\n\x0emax_event_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0cmaxEventTime\x12>\n\tplan_hash\x18\x03 \x01(\x0b\x32!.kaskada.kaskada.v1alpha.PlanHashR\x08planHash\x12)\n\x10snapshot_version\x18\x04 \x01(\x05R\x0fsnapshotVersion*\x8a\x01\n\x0eLongQueryState\x12 \n\x1cLONG_QUERY_STATE_UNSPECIFIED\x10\x00\x12\x1c\n\x18LONG_QUERY_STATE_INITIAL\x10\x01\x12\x1c\n\x18LONG_QUERY_STATE_RUNNING\x10\x02\x12\x1a\n\x16LONG_QUERY_STATE_FINAL\x10\x03\x32\xe3\x02\n\x0e\x43omputeService\x12\\\n\x07\x43ompile\x12\'.kaskada.kaskada.v1alpha.CompileRequest\x1a(.kaskada.kaskada.v1alpha.CompileResponse\x12^\n\x07\x45xecute\x12\'.kaskada.kaskada.v1alpha.ExecuteRequest\x1a(.kaskada.kaskada.v1alpha.ExecuteResponse0\x01\x12\x92\x01\n\x19GetCurrentSnapshotVersion\x12\x39.kaskada.kaskada.v1alpha.GetCurrentSnapshotVersionRequest\x1a:.kaskada.kaskada.v1alpha.GetCurrentSnapshotVersionResponseB\x83\x02\n\x1b\x63om.kaskada.kaskada.v1alphaB\x13\x43omputeServiceProtoP\x01ZQgithub.com/kaskada-ai/kaskada/gen/proto/go/kaskada/kaskada/v1alpha;kaskadav1alpha\xa2\x02\x03KKX\xaa\x02\x17Kaskada.Kaskada.V1alpha\xca\x02\x17Kaskada\\Kaskada\\V1alpha\xe2\x02#Kaskada\\Kaskada\\V1alpha\\GPBMetadata\xea\x02\x19Kaskada::Kaskada::V1alphab\x06proto3')

_LONGQUERYSTATE = DESCRIPTOR.enum_types_by_name['LongQueryState']
LongQueryState = enum_type_wrapper.EnumTypeWrapper(_LONGQUERYSTATE)
LONG_QUERY_STATE_UNSPECIFIED = 0
LONG_QUERY_STATE_INITIAL = 1
LONG_QUERY_STATE_RUNNING = 2
LONG_QUERY_STATE_FINAL = 3


_FEATURESET = DESCRIPTOR.message_types_by_name['FeatureSet']
_FORMULA = DESCRIPTOR.message_types_by_name['Formula']
_COMPUTETABLE = DESCRIPTOR.message_types_by_name['ComputeTable']
_COMPUTETABLE_FILESET = _COMPUTETABLE.nested_types_by_name['FileSet']
_PLANHASH = DESCRIPTOR.message_types_by_name['PlanHash']
_GETCURRENTSNAPSHOTVERSIONREQUEST = DESCRIPTOR.message_types_by_name['GetCurrentSnapshotVersionRequest']
_GETCURRENTSNAPSHOTVERSIONRESPONSE = DESCRIPTOR.message_types_by_name['GetCurrentSnapshotVersionResponse']
_COMPILEREQUEST = DESCRIPTOR.message_types_by_name['CompileRequest']
_COMPILERESPONSE = DESCRIPTOR.message_types_by_name['CompileResponse']
_EXECUTEREQUEST = DESCRIPTOR.message_types_by_name['ExecuteRequest']
_EXECUTEREQUEST_LIMITS = _EXECUTEREQUEST.nested_types_by_name['Limits']
_EXECUTEREQUEST_COMPUTESNAPSHOTCONFIG = _EXECUTEREQUEST.nested_types_by_name['ComputeSnapshotConfig']
_EXECUTERESPONSE = DESCRIPTOR.message_types_by_name['ExecuteResponse']
_EXECUTERESPONSE_PROGRESSINFORMATION = _EXECUTERESPONSE.nested_types_by_name['ProgressInformation']
_EXECUTERESPONSE_COMPUTESNAPSHOT = _EXECUTERESPONSE.nested_types_by_name['ComputeSnapshot']
_COMPILEREQUEST_EXPRESSIONKIND = _COMPILEREQUEST.enum_types_by_name['ExpressionKind']
FeatureSet = _reflection.GeneratedProtocolMessageType('FeatureSet', (_message.Message,), {
  'DESCRIPTOR' : _FEATURESET,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.FeatureSet)
  })
_sym_db.RegisterMessage(FeatureSet)

Formula = _reflection.GeneratedProtocolMessageType('Formula', (_message.Message,), {
  'DESCRIPTOR' : _FORMULA,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.Formula)
  })
_sym_db.RegisterMessage(Formula)

ComputeTable = _reflection.GeneratedProtocolMessageType('ComputeTable', (_message.Message,), {

  'FileSet' : _reflection.GeneratedProtocolMessageType('FileSet', (_message.Message,), {
    'DESCRIPTOR' : _COMPUTETABLE_FILESET,
    '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ComputeTable.FileSet)
    })
  ,
  'DESCRIPTOR' : _COMPUTETABLE,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ComputeTable)
  })
_sym_db.RegisterMessage(ComputeTable)
_sym_db.RegisterMessage(ComputeTable.FileSet)

PlanHash = _reflection.GeneratedProtocolMessageType('PlanHash', (_message.Message,), {
  'DESCRIPTOR' : _PLANHASH,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.PlanHash)
  })
_sym_db.RegisterMessage(PlanHash)

GetCurrentSnapshotVersionRequest = _reflection.GeneratedProtocolMessageType('GetCurrentSnapshotVersionRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCURRENTSNAPSHOTVERSIONREQUEST,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.GetCurrentSnapshotVersionRequest)
  })
_sym_db.RegisterMessage(GetCurrentSnapshotVersionRequest)

GetCurrentSnapshotVersionResponse = _reflection.GeneratedProtocolMessageType('GetCurrentSnapshotVersionResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCURRENTSNAPSHOTVERSIONRESPONSE,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.GetCurrentSnapshotVersionResponse)
  })
_sym_db.RegisterMessage(GetCurrentSnapshotVersionResponse)

CompileRequest = _reflection.GeneratedProtocolMessageType('CompileRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMPILEREQUEST,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.CompileRequest)
  })
_sym_db.RegisterMessage(CompileRequest)

CompileResponse = _reflection.GeneratedProtocolMessageType('CompileResponse', (_message.Message,), {
  'DESCRIPTOR' : _COMPILERESPONSE,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.CompileResponse)
  })
_sym_db.RegisterMessage(CompileResponse)

ExecuteRequest = _reflection.GeneratedProtocolMessageType('ExecuteRequest', (_message.Message,), {

  'Limits' : _reflection.GeneratedProtocolMessageType('Limits', (_message.Message,), {
    'DESCRIPTOR' : _EXECUTEREQUEST_LIMITS,
    '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ExecuteRequest.Limits)
    })
  ,

  'ComputeSnapshotConfig' : _reflection.GeneratedProtocolMessageType('ComputeSnapshotConfig', (_message.Message,), {
    'DESCRIPTOR' : _EXECUTEREQUEST_COMPUTESNAPSHOTCONFIG,
    '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ExecuteRequest.ComputeSnapshotConfig)
    })
  ,
  'DESCRIPTOR' : _EXECUTEREQUEST,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ExecuteRequest)
  })
_sym_db.RegisterMessage(ExecuteRequest)
_sym_db.RegisterMessage(ExecuteRequest.Limits)
_sym_db.RegisterMessage(ExecuteRequest.ComputeSnapshotConfig)

ExecuteResponse = _reflection.GeneratedProtocolMessageType('ExecuteResponse', (_message.Message,), {

  'ProgressInformation' : _reflection.GeneratedProtocolMessageType('ProgressInformation', (_message.Message,), {
    'DESCRIPTOR' : _EXECUTERESPONSE_PROGRESSINFORMATION,
    '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ExecuteResponse.ProgressInformation)
    })
  ,

  'ComputeSnapshot' : _reflection.GeneratedProtocolMessageType('ComputeSnapshot', (_message.Message,), {
    'DESCRIPTOR' : _EXECUTERESPONSE_COMPUTESNAPSHOT,
    '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
    # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ExecuteResponse.ComputeSnapshot)
    })
  ,
  'DESCRIPTOR' : _EXECUTERESPONSE,
  '__module__' : 'kaskada.kaskada.v1alpha.compute_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v1alpha.ExecuteResponse)
  })
_sym_db.RegisterMessage(ExecuteResponse)
_sym_db.RegisterMessage(ExecuteResponse.ProgressInformation)
_sym_db.RegisterMessage(ExecuteResponse.ComputeSnapshot)

_COMPUTESERVICE = DESCRIPTOR.services_by_name['ComputeService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\033com.kaskada.kaskada.v1alphaB\023ComputeServiceProtoP\001ZQgithub.com/kaskada-ai/kaskada/gen/proto/go/kaskada/kaskada/v1alpha;kaskadav1alpha\242\002\003KKX\252\002\027Kaskada.Kaskada.V1alpha\312\002\027Kaskada\\Kaskada\\V1alpha\342\002#Kaskada\\Kaskada\\V1alpha\\GPBMetadata\352\002\031Kaskada::Kaskada::V1alpha'
  _LONGQUERYSTATE._serialized_start=3933
  _LONGQUERYSTATE._serialized_end=4071
  _FEATURESET._serialized_start=343
  _FEATURESET._serialized_end=439
  _FORMULA._serialized_start=441
  _FORMULA._serialized_end=537
  _COMPUTETABLE._serialized_start=540
  _COMPUTETABLE._serialized_end=917
  _COMPUTETABLE_FILESET._serialized_start=763
  _COMPUTETABLE_FILESET._serialized_end=917
  _PLANHASH._serialized_start=919
  _PLANHASH._serialized_end=949
  _GETCURRENTSNAPSHOTVERSIONREQUEST._serialized_start=951
  _GETCURRENTSNAPSHOTVERSIONREQUEST._serialized_end=985
  _GETCURRENTSNAPSHOTVERSIONRESPONSE._serialized_start=987
  _GETCURRENTSNAPSHOTVERSIONRESPONSE._serialized_end=1065
  _COMPILEREQUEST._serialized_start=1068
  _COMPILEREQUEST._serialized_end=1628
  _COMPILEREQUEST_EXPRESSIONKIND._serialized_start=1520
  _COMPILEREQUEST_EXPRESSIONKIND._serialized_end=1628
  _COMPILERESPONSE._serialized_start=1631
  _COMPILERESPONSE._serialized_end=2111
  _EXECUTEREQUEST._serialized_start=2114
  _EXECUTEREQUEST._serialized_end=2821
  _EXECUTEREQUEST_LIMITS._serialized_start=2653
  _EXECUTEREQUEST_LIMITS._serialized_end=2696
  _EXECUTEREQUEST_COMPUTESNAPSHOTCONFIG._serialized_start=2698
  _EXECUTEREQUEST_COMPUTESNAPSHOTCONFIG._serialized_end=2821
  _EXECUTERESPONSE._serialized_start=2824
  _EXECUTERESPONSE._serialized_end=3930
  _EXECUTERESPONSE_PROGRESSINFORMATION._serialized_start=3352
  _EXECUTERESPONSE_PROGRESSINFORMATION._serialized_end=3717
  _EXECUTERESPONSE_COMPUTESNAPSHOT._serialized_start=3720
  _EXECUTERESPONSE_COMPUTESNAPSHOT._serialized_end=3930
  _COMPUTESERVICE._serialized_start=4074
  _COMPUTESERVICE._serialized_end=4429
# @@protoc_insertion_point(module_scope)
