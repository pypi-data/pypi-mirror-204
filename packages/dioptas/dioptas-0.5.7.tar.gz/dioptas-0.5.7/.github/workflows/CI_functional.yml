# This is a basic workflow to help you get started with Actions

name: CI_functional

on: [push, pull_request]

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - run: git fetch --prune --unshallow
    - name: Setup Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Use Python Dependency Cache
      id: pip-cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('Dioptas.spec') }}-c3
        restore-keys: |
          ${{ runner.os }}-pip-c3

    - name: Install Apt Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libxkbcommon-x11-0 libxkbcommon-x11-dev libxcb-xinerama0  \
        libxkbcommon-dev libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev \
        libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev \
        libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-shape0-dev \
        libxcb-randr0-dev libxcb-render-util0-dev

    - name: Install Pip Dependencies
      run: |
        pip install pycifrw pandas python-dateutil h5py scikit-image pyqt5 cython future qtpy pyfai lmfit \
                    pyepics extra_data pyinstaller watchdog pyopengl pyopengl-accelerate h5py hdf5plugin pyqtgraph \
                    mock pytest setuptools_scm

    - name: Run tests
      shell: bash -l {0}
      run: |
        QT_QPA_PLATFORM=offscreen py.test dioptas/tests/functional_tests/test_functional_JcpdsEditor.py
        QT_QPA_PLATFORM=offscreen py.test dioptas/tests/functional_tests/test_img_bg.py
        QT_QPA_PLATFORM=offscreen py.test dioptas/tests/functional_tests/test_userinterface.py
        QT_QPA_PLATFORM=offscreen py.test dioptas/tests/functional_tests/test_functional_integration.py
