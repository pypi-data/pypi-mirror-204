---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import DataPreview from "@components/data/DataPreview";
import csv from "csvtojson";
import Alert from "@components/shared/Alert.astro";
import SidebarLayout from "./SidebarLayout.astro";
import type { GraphinData } from "@astrodown/graph";
import Badge from "@components/shared/Badge.astro";
import type { DataPreviewConfig } from "src/types";

export interface Props {
  entry: CollectionEntry<"data">;
  graphData?: GraphinData;
}

const { entry, graphData } = Astro.props;
const { Content } = await entry.render();

const parser = csv({
  noheader: false,
  delimiter: "auto",
  trim: true,
});

let dataParseError = null;
const config: DataPreviewConfig = {
  previewURL: "",
  data: [],
  headers: [],
  nrow: 0,
  ncol: 0,
  title: entry.data.title,
  description: entry.data.description,
};
if (entry.data.previewURL) {
  try {
    const res = await fetch(entry.data.previewURL);
    const text = await res.text();
    const completeData = await parser.fromString(text);
    const data = completeData.slice(0, 100);
    config.previewURL = entry.data.previewURL;
    config.data = data;
    config.headers = Object.keys(data[0]);
    config.nrow = data.length;
    config.ncol = config.headers.length;
  } catch (err: unknown) {
    dataParseError = `Failed to process data at ${entry.data.previewURL}. Data Preview only supports a static csv, tsv, or json file.`;
  }
}
---

<BaseLayout graphData={graphData}>
  <div class="max-w-5xl mx-auto p-4">
    <SidebarLayout>
      <div slot="sidebar">
        <h2 class="text-2xl font-semibold mb-4">{entry.data.title}</h2>
        {
          entry.data.previewURL &&
            (dataParseError ? (
              <Alert>{dataParseError}</Alert>
            ) : (
              <DataPreview config={config} client:only="load" />
            ))
        }
      </div>
      <div slot="main">
        <Content />
      </div>
    </SidebarLayout>
  </div>
</BaseLayout>
