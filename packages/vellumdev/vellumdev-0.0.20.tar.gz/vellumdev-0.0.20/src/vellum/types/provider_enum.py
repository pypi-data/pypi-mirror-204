# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ProviderEnum(str, enum.Enum):
    OPENAI = "OPENAI"
    COHERE = "COHERE"
    ANTHROPIC = "ANTHROPIC"

    def visit(
        self,
        openai: typing.Callable[[], T_Result],
        cohere: typing.Callable[[], T_Result],
        anthropic: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ProviderEnum.OPENAI:
            return openai()
        if self is ProviderEnum.COHERE:
            return cohere()
        if self is ProviderEnum.ANTHROPIC:
            return anthropic()
