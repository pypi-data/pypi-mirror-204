Metadata-Version: 2.1
Name: mtg-deckstats
Version: 0.0.1a8
Summary: Magic: the Gathering deckstats
Home-page: https://github.com/lheyberger/mtg-deckstats
License: MIT
Author: Ludovic Heyberger
Author-email: 940408+lheyberger@users.noreply.github.com
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: beautifulsoup4 (>=4.12.2,<5.0.0)
Requires-Dist: more-itertools (>=9.1.0,<10.0.0)
Requires-Dist: mtg-parser (>=0.0.1a28,<0.0.2)
Requires-Dist: requests (>=2.28.2,<3.0.0)
Project-URL: Documentation, https://github.com/lheyberger/mtg-deckstats
Project-URL: Repository, https://github.com/lheyberger/mtg-deckstats
Description-Content-Type: text/markdown

# mtg-deckstats

![PyPI](https://img.shields.io/pypi/v/mtg-deckstats)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mtg-deckstats)
![GitHub](https://img.shields.io/github/license/lheyberger/mtg-deckstats)


## How to install

	pip install mtg-deckstats


## Quick Start

Generate a deckstats report using the following steps:

	import mtg_deckstats
	
	report = mtg_deckstats.compute('<decklist url>')
	print(report)


To speed things up, you can also compute reports with a pre-generated cache using the following steps:

	import mtg_deckstats

	cache = mtg_deckstats.pre_cache()

	report_1 = mtg_deckstats.compute('<decklist url 1>', data=cache)
	print(report_1)

	report_2 = mtg_deckstats.compute('<decklist url 2>', data=cache)
	print(report_2)


## Supported deckbuilding websites

Internally `mtg_deckstats` relies on `mtg_parser` and thus, supports the following deckbuilding websites:
* aetherhub.com
* archidekt.com
* deckstats.net
* moxfield.com
* mtggoldfish.com
* scryfall.com
* tappedout.net
* tcgplayer.com

