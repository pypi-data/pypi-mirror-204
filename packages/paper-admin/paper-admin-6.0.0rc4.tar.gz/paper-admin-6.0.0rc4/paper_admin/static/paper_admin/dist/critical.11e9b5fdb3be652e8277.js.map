{"version":3,"file":"critical.11e9b5fdb3be652e8277.js","mappings":"yBAAAA,OAAOC,WAAa,CAChBC,eAAgB,WACZ,MAAMC,EAAUH,OAAOI,SAASC,KAAKC,UAAU,GAC/C,OAAOC,SAASC,eAAgB,GAAEL,QACtC,EACAM,YAAa,SAAUC,GACnB,OAAOH,SAASC,eAAeE,EAAIL,KAAKC,UAAU,GACtD,EACAK,aAAc,SAAUD,GACpB,MACME,EADUF,EAAIG,QAAQ,eACFC,cAAc,0BAClCC,EAAgBC,iBAAiBN,GACjCO,EAAYP,EAAIQ,YAAcC,SAASJ,EAAcK,aAAeD,SAASJ,EAAcM,cAC3FC,EAAWZ,EAAIa,WAAaJ,SAASJ,EAAcK,aACnDI,EAAUd,EAAIe,UAAYf,EAAIgB,aAAeP,SAASJ,EAAcY,eAC1Ef,EAAUgB,MAAMC,MAAS,GAAEZ,MAC3BL,EAAUgB,MAAME,KAAQ,GAAER,MAC1BV,EAAUgB,MAAMG,IAAO,GAAEP,KAC7B,EACAQ,iBAAkB,WACd,MAAMC,EAAgB1B,SAAS2B,iBAAiB,eAChDC,MAAMC,KAAKH,GAAeI,SAAQC,IAC9B,MAAMC,EAAYD,EAAQxB,cAAc,oBACxC0B,KAAK7B,aAAa4B,EAAU,GAEpC,EACAE,KAAM,WACF,MAAMR,EAAgB1B,SAAS2B,iBAAiB,eAChDC,MAAMC,KAAKH,GAAeI,SAAQC,IAC9B,IAAIC,EAAYC,KAAKtC,iBAChBqC,GAAcD,EAAQI,SAASH,KAChCA,EAAYD,EAAQxB,cAAc,cAGtC,MAAM6B,EAAOL,EAAQJ,iBAAiB,gBACtCC,MAAMC,KAAKO,GAAMN,SAAQ3B,IACrBA,EAAIkC,UAAUC,OAAO,SAAUnC,IAAQ6B,GAEzBC,KAAK/B,YAAYC,GACzBkC,UAAUC,OAAO,SAAUnC,IAAQ6B,EAAU,IAGvDhC,SAASuC,iBAAiB,oBAAoB,KAC1CN,KAAK7B,aAAa4B,EAAU,GAC9B,GAEV,E","sources":["webpack://paper-admin/./paper_admin/static/paper_admin/src/bem/paper-tabs/critical.js"],"sourcesContent":["window._paperTabs = {\n    getTabFromHash: function () {\n        const tabName = window.location.hash.substring(1);\n        return document.getElementById(`${tabName}-tab`);\n    },\n    getPanelFor: function (tab) {\n        return document.getElementById(tab.hash.substring(1));\n    },\n    setUnderline: function (tab) {\n        const tabRoot = tab.closest(\".paper-tabs\");\n        const underline = tabRoot.querySelector(\".paper-tabs__underline\");\n        const computedStyle = getComputedStyle(tab);\n        const lineWidth = tab.clientWidth - parseInt(computedStyle.paddingLeft) - parseInt(computedStyle.paddingRight);\n        const lineLeft = tab.offsetLeft + parseInt(computedStyle.paddingLeft);\n        const lineTop = tab.offsetTop + tab.offsetHeight - parseInt(computedStyle.paddingBottom);\n        underline.style.width = `${lineWidth}px`;\n        underline.style.left = `${lineLeft}px`;\n        underline.style.top = `${lineTop}px`;\n    },\n    updateUnderlines: function () {\n        const paperTabRoots = document.querySelectorAll(\".paper-tabs\");\n        Array.from(paperTabRoots).forEach(tabRoot => {\n            const activeTab = tabRoot.querySelector(\".nav-link.active\");\n            this.setUnderline(activeTab);\n        });\n    },\n    init: function () {\n        const paperTabRoots = document.querySelectorAll(\".paper-tabs\");\n        Array.from(paperTabRoots).forEach(tabRoot => {\n            let activeTab = this.getTabFromHash();\n            if (!activeTab || !tabRoot.contains(activeTab)) {\n                activeTab = tabRoot.querySelector(\".nav-link\");\n            }\n\n            const tabs = tabRoot.querySelectorAll(\"[role='tab']\");\n            Array.from(tabs).forEach(tab => {\n                tab.classList.toggle(\"active\", tab === activeTab);\n\n                const panel = this.getPanelFor(tab);\n                panel.classList.toggle(\"active\", tab === activeTab);\n            });\n\n            document.addEventListener(\"DOMContentLoaded\", () => {\n                this.setUnderline(activeTab);\n            });\n        });\n    }\n};\n"],"names":["window","_paperTabs","getTabFromHash","tabName","location","hash","substring","document","getElementById","getPanelFor","tab","setUnderline","underline","closest","querySelector","computedStyle","getComputedStyle","lineWidth","clientWidth","parseInt","paddingLeft","paddingRight","lineLeft","offsetLeft","lineTop","offsetTop","offsetHeight","paddingBottom","style","width","left","top","updateUnderlines","paperTabRoots","querySelectorAll","Array","from","forEach","tabRoot","activeTab","this","init","contains","tabs","classList","toggle","addEventListener"],"sourceRoot":""}