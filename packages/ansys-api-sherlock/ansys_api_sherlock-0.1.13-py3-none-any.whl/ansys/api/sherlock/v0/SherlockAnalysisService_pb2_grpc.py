# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.sherlock.v0 import SherlockAnalysisService_pb2 as ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2
from ansys.api.sherlock.v0 import SherlockCommonService_pb2 as ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2


class SherlockAnalysisServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.runAnalysis = channel.unary_unary(
                '/SherlockAnalysisService/runAnalysis',
                request_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.RunAnalysisRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
                )
        self.runStrainMapAnalysis = channel.unary_unary(
                '/SherlockAnalysisService/runStrainMapAnalysis',
                request_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.RunStrainMapAnalysisRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
                )
        self.getRandomVibeInputFields = channel.unary_unary(
                '/SherlockAnalysisService/getRandomVibeInputFields',
                request_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetRandomVibeInputFieldsRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetRandomVibeInputFieldsResponse.FromString,
                )
        self.updateRandomVibeProps = channel.unary_unary(
                '/SherlockAnalysisService/updateRandomVibeProps',
                request_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.UpdateRandomVibePropsRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
                )
        self.getNaturalFrequencyInputFields = channel.unary_unary(
                '/SherlockAnalysisService/getNaturalFrequencyInputFields',
                request_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetNaturalFrequencyInputFieldsRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetNaturalFrequencyInputFieldsResponse.FromString,
                )
        self.updateNaturalFrequencyProps = channel.unary_unary(
                '/SherlockAnalysisService/updateNaturalFrequencyProps',
                request_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.UpdateNaturalFrequencyPropsRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
                )


class SherlockAnalysisServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def runAnalysis(self, request, context):
        """Runs one or more Sherlock analysis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def runStrainMapAnalysis(self, request, context):
        """Run Sherlock strain map analysis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRandomVibeInputFields(self, request, context):
        """Returns the list of valid Random Vibe input fields for the provided model source and user configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateRandomVibeProps(self, request, context):
        """Updates the analysis properties for Random Vibe analysis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getNaturalFrequencyInputFields(self, request, context):
        """Returns the list of valid Natural Frequency property fields given the user configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateNaturalFrequencyProps(self, request, context):
        """Updates the analysis properties for Natural Frequency analysis.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SherlockAnalysisServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'runAnalysis': grpc.unary_unary_rpc_method_handler(
                    servicer.runAnalysis,
                    request_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.RunAnalysisRequest.FromString,
                    response_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.SerializeToString,
            ),
            'runStrainMapAnalysis': grpc.unary_unary_rpc_method_handler(
                    servicer.runStrainMapAnalysis,
                    request_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.RunStrainMapAnalysisRequest.FromString,
                    response_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.SerializeToString,
            ),
            'getRandomVibeInputFields': grpc.unary_unary_rpc_method_handler(
                    servicer.getRandomVibeInputFields,
                    request_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetRandomVibeInputFieldsRequest.FromString,
                    response_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetRandomVibeInputFieldsResponse.SerializeToString,
            ),
            'updateRandomVibeProps': grpc.unary_unary_rpc_method_handler(
                    servicer.updateRandomVibeProps,
                    request_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.UpdateRandomVibePropsRequest.FromString,
                    response_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.SerializeToString,
            ),
            'getNaturalFrequencyInputFields': grpc.unary_unary_rpc_method_handler(
                    servicer.getNaturalFrequencyInputFields,
                    request_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetNaturalFrequencyInputFieldsRequest.FromString,
                    response_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetNaturalFrequencyInputFieldsResponse.SerializeToString,
            ),
            'updateNaturalFrequencyProps': grpc.unary_unary_rpc_method_handler(
                    servicer.updateNaturalFrequencyProps,
                    request_deserializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.UpdateNaturalFrequencyPropsRequest.FromString,
                    response_serializer=ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SherlockAnalysisService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SherlockAnalysisService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def runAnalysis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SherlockAnalysisService/runAnalysis',
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.RunAnalysisRequest.SerializeToString,
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def runStrainMapAnalysis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SherlockAnalysisService/runStrainMapAnalysis',
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.RunStrainMapAnalysisRequest.SerializeToString,
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRandomVibeInputFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SherlockAnalysisService/getRandomVibeInputFields',
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetRandomVibeInputFieldsRequest.SerializeToString,
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetRandomVibeInputFieldsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateRandomVibeProps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SherlockAnalysisService/updateRandomVibeProps',
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.UpdateRandomVibePropsRequest.SerializeToString,
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getNaturalFrequencyInputFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SherlockAnalysisService/getNaturalFrequencyInputFields',
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetNaturalFrequencyInputFieldsRequest.SerializeToString,
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.GetNaturalFrequencyInputFieldsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateNaturalFrequencyProps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SherlockAnalysisService/updateNaturalFrequencyProps',
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockAnalysisService__pb2.UpdateNaturalFrequencyPropsRequest.SerializeToString,
            ansys_dot_api_dot_sherlock_dot_v0_dot_SherlockCommonService__pb2.ReturnCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
