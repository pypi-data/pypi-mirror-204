# Generated by ariadne-codegen on 2023-04-24 15:32
# Source: ./operations.graphql

from typing import Any, Optional

from pydantic import Field

from .base_model import BaseModel


class CreateIntegrationConnection(BaseModel):
    create_integration_connection: "CreateIntegrationConnectionCreateIntegrationConnection" = Field(
        alias="createIntegrationConnection"
    )


class CreateIntegrationConnectionCreateIntegrationConnection(BaseModel):
    integration_connection: "CreateIntegrationConnectionCreateIntegrationConnectionIntegrationConnection" = Field(
        alias="integrationConnection"
    )


class CreateIntegrationConnectionCreateIntegrationConnectionIntegrationConnection(
    BaseModel
):
    id: str
    integration_key: str = Field(alias="integrationKey")
    end_user_source_id: str = Field(alias="endUserSourceId")
    end_user_email: str = Field(alias="endUserEmail")
    end_user_company_name: str = Field(alias="endUserCompanyName")
    last_heartbeat_at: Optional[Any] = Field(alias="lastHeartbeatAt")


CreateIntegrationConnection.update_forward_refs()
CreateIntegrationConnectionCreateIntegrationConnection.update_forward_refs()
CreateIntegrationConnectionCreateIntegrationConnectionIntegrationConnection.update_forward_refs()
